# https://taskfile.dev
version: "3"
vars:
  PYTHON_BASE_IMAGE_TAG:
    sh: ref_name=$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/HEAD detached at //' -e 's/* (\(.*\))/\1/' -e 's/* \(.*\)/\1/'); echo $ref_name;
  DOCKER_BUILD_ARGS: >-
    --build-arg HTTP_PROXY --build-arg HTTPS_PROXY --build-arg NO_PROXY
    --build-arg CI_REGISTRY
  DOCKER_RUN_ARGS: >-
    -e HTTP_PROXY=$HTTP_PROXY -e HTTPS_PROXY=$HTTPS_PROXY -e NO_PROXY=$NO_PROXY
    -v $(pwd)/:/home/user/build/

tasks:
  build-image:
    desc: Build docker image
    cmds:
      - |
        echo "Build from base image with tag={{.PYTHON_BASE_IMAGE_TAG}}"
        export `cat .env_dev` && \
        docker build {{.DOCKER_BUILD_ARGS}} \
        --build-arg PYTHON_BASE_IMAGE_TAG={{.PYTHON_BASE_IMAGE_TAG}} \
        --progress plain \
        -t python-base:{{.PYTHON_BASE_IMAGE_TAG}} .

  rebuild-image:
    desc: ReBuild docker image
    cmds:
      - task: build-image
        vars:
          DOCKER_BUILD_ARGS: '{{.DOCKER_BUILD_ARGS}} --no-cache'

  test-image:
    desc: Test docker image
    cmds:
      - task: build-image
      - |
        export PYTHON_VERSION=$(echo {{.PYTHON_BASE_IMAGE_TAG}}| cut -d'-' -f1 | awk 'NR==1{split($1, a, "."); print a[1]"."a[2]}')
        docker run --rm -it {{.DOCKER_RUN_ARGS}} \
        --env-file=.env_dev -e PYTHON_VERSION \
        python-base:{{.PYTHON_BASE_IMAGE_TAG}} bash \
        -c "cd build && ./scripts/check_python_version.sh"

  dockerfile-check:
    desc: Run static analysis tool (linter) for Dockerfile
    cmds:
      - >-
          docker run --rm -it
          -v $(pwd):/app
          hadolint/hadolint:latest-alpine
          sh -c 'hadolint --version && cd app && echo "Checking..." && hadolint Dockerfile && echo "Done"'

  shell-check:
    desc: Run static analysis tool (linter) for shell scripts
    cmds:
      - >-
          docker run --rm -it
          -v $(pwd):/app
          koalaman/shellcheck-alpine:latest
          sh -c 'shellcheck --version && cd app && echo "Checking..." && shellcheck scripts/*.sh && echo "Done"'

  static-analysis:
    desc: Run code formatter check, linting, static type analysis
    cmds:
      - task: shell-check
      - task: dockerfile-check