# https://taskfile.dev
version: "3"
dotenv: ['.env']
env:
  # PYTHON_VERSION: "3.10"
vars:
  DOCKER_BUILD_ARGS: >-
    --build-arg HTTP_PROXY --build-arg HTTPS_PROXY --build-arg NO_PROXY
    --build-arg CI_REGISTRY
  DOCKER_RUN_ARGS: >-
    -e HTTP_PROXY -e HTTPS_PROXY -e NO_PROXY
    -v $(pwd)/:/build/

tasks:
  env:
    desc: Print environment variables
    cmds:
      - |
        set -a; source .env; set +a;
        env | grep -E '(HOME|PATH|IMAGE|DOCKER|TAG|PYTHON)'
  build-image:
    desc: Build docker image
    cmds:
      - |
        set -a; source .env; set +a;
        echo "Build from base image ${BASE_IMAGE_NAME}:${BASE_IMAGE_TAG}"
        docker build {{.DOCKER_BUILD_ARGS}} \
        --build-arg BASE_IMAGE_NAME \
        --build-arg BASE_IMAGE_TAG \
        --progress plain \
        -t local/{{.IMAGE_NAME}}:{{.IMAGE_TAG}} .

  rebuild-image:
    desc: ReBuild docker image
    cmds:
      - task: build-image
        vars:
          DOCKER_BUILD_ARGS: '{{.DOCKER_BUILD_ARGS}} --no-cache'

  test-image:
    desc: Test docker image
    cmds:
      - |
        set -a; source .env; set +a;
        docker run --rm -it {{.DOCKER_RUN_ARGS}} \
        -e IMAGE_TAGS=$IMAGE_TAG \
        local/${IMAGE_NAME}:${IMAGE_TAG} bash \
        -c "cd /build && ./scripts/test.sh"

  build-and-test:
    desc: Build and test docker image
    cmds:
      - task: build-image
      - task: test-image

  dockerfile-check:
    desc: Run static analysis tool (linter) for Dockerfile
    cmds:
      - >-
          docker run --rm -it
          -v $(pwd):/app
          hadolint/hadolint:latest-alpine
          sh -c 'hadolint --version && cd app && echo "Checking..." && hadolint Dockerfile && echo "Done"'

  shell-check:
    desc: Run static analysis tool (linter) for shell scripts
    cmds:
      - >-
          docker run --rm -it
          -v $(pwd):/app
          koalaman/shellcheck-alpine:latest
          sh -c 'shellcheck --version && cd app && echo "Checking..." && shellcheck scripts/*.sh && echo "Done"'

  static-analysis:
    desc: Run code formatter check, linting, static type analysis
    cmds:
      - task: shell-check
      - task: dockerfile-check
