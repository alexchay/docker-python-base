name: Build Image
description: Build and push Docker image to Docker Hub

on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      from_image_tag:
        description: "Base image tag to use for the build (e.g., 3.12.2-slim)"
        required: false
      image_tag:
        description: "Image tag to use for the build (e.g., 3.12)"
        required: false


jobs:
  process_image_tags:
    runs-on: ubuntu-latest

    outputs:
      from_image_name: ${{ steps.process_tags.outputs.FROM_IMAGE_NAME }}
      from_image_tag: ${{ steps.process_tags.outputs.FROM_IMAGE_TAG }}
      image_name: ${{ steps.process_tags.outputs.IMAGE_NAME }}
      image_tag: ${{ steps.process_tags.outputs.IMAGE_TAG }}
    steps:
      - uses: actions/checkout@v4

      - name: Process image tags
        id: process_tags
        run: |

          # Check if the base image tag is provided from workflow_dispatch user's input
          FROM_IMAGE_TAG=$(if [ -n "${{ inputs.from_image_tag }}" ]; then echo ${{ inputs.from_image_tag }}; else echo $(./scripts/bash_helpers.sh get_image_tag); fi)
          echo "FROM_IMAGE_TAG=$FROM_IMAGE_TAG" >> $GITHUB_OUTPUT

          # Check if the image tag is provided from workflow_dispatch user's input
          IMAGE_TAG=$(if [ -n "${{ inputs.image_tag }}" ]; then echo ${{ inputs.image_tag }}; else echo $FROM_IMAGE_TAG; fi)
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_OUTPUT

          # This file should contain the environment variables used in the Dockerfile and the build process.
          export `cat .github/.build.env` && \
          echo "FROM_IMAGE_NAME=$FROM_IMAGE_NAME" >> $GITHUB_OUTPUT && \
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_OUTPUT


  build_image:
    permissions:
      contents: read
      packages: write
    needs: process_image_tags
    uses: alexchay/github-ci/.github/workflows/build_image.yml@main
    with:
      from_image_name: ${{ needs.process_image_tags.outputs.from_image_name }}
      from_image_tag: ${{ needs.process_image_tags.outputs.from_image_tag }}
      image_name: ${{ needs.process_image_tags.outputs.image_name }}
      image_tag: ${{ needs.process_image_tags.outputs.image_tag }}
